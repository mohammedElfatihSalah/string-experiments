[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
I0204 00:29:40.832753 139887095990144 run.py:116] Using CLRS21 spec: {'train': {'num_samples': 1000, 'length': 16, 'seed': 1}, 'val': {'num_samples': 32, 'length': 64, 'seed': 2}, 'test': {'num_samples': 32, 'length': 64, 'seed': 3}}
manual >>  True
I0204 00:29:44.874490 139887095990144 xla_bridge.py:231] Unable to initialize backend 'tpu_driver': NOT_FOUND: Unable to find driver in registry given worker:
2022-02-04 00:29:44.889958: E external/org_tensorflow/tensorflow/stream_executor/cuda/cuda_driver.cc:271] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
I0204 00:29:44.890262 139887095990144 xla_bridge.py:231] Unable to initialize backend 'gpu': FAILED_PRECONDITION: No visible GPU devices.
I0204 00:29:44.891018 139887095990144 xla_bridge.py:231] Unable to initialize backend 'tpu': INVALID_ARGUMENT: TpuPlatform is not available.
W0204 00:29:44.891205 139887095990144 xla_bridge.py:235] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
manual >>  True
adj shape >>  (32, 20, 20)
I0204 00:30:36.857164 139887095990144 run.py:193] Compiled feedback step in 51.986796 s.
manual >>  True
adj shape >>  (32, 80, 80)
manual >>  True
adj shape >>  (32, 80, 80)
I0204 00:30:49.059535 139887095990144 run.py:207] (train) step 0: {'average_accuracy': 0.5343062957263326, 'average_shift': 4.125}
I0204 00:31:23.776755 139887095990144 run.py:214] (val) step 0: {'average_accuracy': 0.5496452538540846, 'average_shift': 22.1875}
I0204 00:31:23.778826 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:31:23.786594 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:31:39.614109 139887095990144 run.py:207] (train) step 10: {'average_accuracy': 0.6467706315979342, 'average_shift': 2.4375}
I0204 00:31:41.265758 139887095990144 run.py:214] (val) step 10: {'average_accuracy': 0.5867051580088454, 'average_shift': 20.625}
I0204 00:31:41.267987 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:31:41.275598 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:31:57.239612 139887095990144 run.py:207] (train) step 20: {'average_accuracy': 0.5407622953832802, 'average_shift': 4.3125}
I0204 00:31:58.922910 139887095990144 run.py:214] (val) step 20: {'average_accuracy': 0.5790463678426739, 'average_shift': 22.5}
I0204 00:32:15.050783 139887095990144 run.py:207] (train) step 30: {'average_accuracy': 0.5206392855725287, 'average_shift': 3.03125}
I0204 00:32:16.707347 139887095990144 run.py:214] (val) step 30: {'average_accuracy': 0.6027631306362496, 'average_shift': 19.34375}
I0204 00:32:16.707592 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:32:16.713816 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:32:32.743309 139887095990144 run.py:207] (train) step 40: {'average_accuracy': 0.5609616537465802, 'average_shift': 3.375}
I0204 00:32:34.396594 139887095990144 run.py:214] (val) step 40: {'average_accuracy': 0.5930596679627836, 'average_shift': 20.5}
I0204 00:32:50.186411 139887095990144 run.py:207] (train) step 50: {'average_accuracy': 0.4951186689020473, 'average_shift': 2.5625}
I0204 00:32:51.846033 139887095990144 run.py:214] (val) step 50: {'average_accuracy': 0.5936515689637017, 'average_shift': 16.71875}
I0204 00:32:51.846488 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:33:07.988542 139887095990144 run.py:207] (train) step 60: {'average_accuracy': 0.5420956086397263, 'average_shift': 4.375}
I0204 00:33:09.620522 139887095990144 run.py:214] (val) step 60: {'average_accuracy': 0.5834605758707743, 'average_shift': 22.34375}
I0204 00:33:25.547901 139887095990144 run.py:207] (train) step 70: {'average_accuracy': 0.5361338901090741, 'average_shift': 4.875}
I0204 00:33:27.223507 139887095990144 run.py:214] (val) step 70: {'average_accuracy': 0.5767382077467401, 'average_shift': 22.53125}
I0204 00:33:43.493505 139887095990144 run.py:207] (train) step 80: {'average_accuracy': 0.5309227664696415, 'average_shift': 2.78125}
I0204 00:33:45.167057 139887095990144 run.py:214] (val) step 80: {'average_accuracy': 0.5900157592662166, 'average_shift': 19.84375}
I0204 00:34:01.043449 139887095990144 run.py:207] (train) step 90: {'average_accuracy': 0.6174710569036227, 'average_shift': 2.46875}
I0204 00:34:02.784378 139887095990144 run.py:214] (val) step 90: {'average_accuracy': 0.594832579812119, 'average_shift': 19.5625}
I0204 00:34:19.029902 139887095990144 run.py:207] (train) step 100: {'average_accuracy': 0.5295211850842655, 'average_shift': 2.65625}
I0204 00:34:20.684906 139887095990144 run.py:214] (val) step 100: {'average_accuracy': 0.5925256479619254, 'average_shift': 18.1875}
I0204 00:34:36.773364 139887095990144 run.py:207] (train) step 110: {'average_accuracy': 0.4914058597652347, 'average_shift': 2.21875}
I0204 00:34:38.472835 139887095990144 run.py:214] (val) step 110: {'average_accuracy': 0.6000932253046991, 'average_shift': 18.78125}
I0204 00:34:54.813829 139887095990144 run.py:207] (train) step 120: {'average_accuracy': 0.599818193958819, 'average_shift': 2.71875}
I0204 00:34:56.468152 139887095990144 run.py:214] (val) step 120: {'average_accuracy': 0.5996107757883766, 'average_shift': 19.5625}
I0204 00:35:13.269058 139887095990144 run.py:207] (train) step 130: {'average_accuracy': 0.6443130654068155, 'average_shift': 2.9375}
I0204 00:35:14.921527 139887095990144 run.py:214] (val) step 130: {'average_accuracy': 0.5985351681413016, 'average_shift': 19.8125}
I0204 00:35:31.299561 139887095990144 run.py:207] (train) step 140: {'average_accuracy': 0.5682633153632572, 'average_shift': 2.46875}
I0204 00:35:32.959506 139887095990144 run.py:214] (val) step 140: {'average_accuracy': 0.5916727774356034, 'average_shift': 18.46875}
I0204 00:35:49.248933 139887095990144 run.py:207] (train) step 150: {'average_accuracy': 0.5267762752222408, 'average_shift': 2.96875}
I0204 00:35:50.919243 139887095990144 run.py:214] (val) step 150: {'average_accuracy': 0.5940106059631253, 'average_shift': 17.8125}
I0204 00:36:07.263454 139887095990144 run.py:207] (train) step 160: {'average_accuracy': 0.5620603354978356, 'average_shift': 2.71875}
I0204 00:36:08.938617 139887095990144 run.py:214] (val) step 160: {'average_accuracy': 0.614052368854734, 'average_shift': 17.9375}
I0204 00:36:08.939481 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:36:25.337867 139887095990144 run.py:207] (train) step 170: {'average_accuracy': 0.5334498723079896, 'average_shift': 2.78125}
I0204 00:36:26.989667 139887095990144 run.py:214] (val) step 170: {'average_accuracy': 0.6028486561716395, 'average_shift': 18.9375}
I0204 00:36:43.040326 139887095990144 run.py:207] (train) step 180: {'average_accuracy': 0.5052352126824843, 'average_shift': 2.21875}
I0204 00:36:44.723217 139887095990144 run.py:214] (val) step 180: {'average_accuracy': 0.6028452719937971, 'average_shift': 18.0625}
I0204 00:37:00.844128 139887095990144 run.py:207] (train) step 190: {'average_accuracy': 0.5592153353182765, 'average_shift': 2.3125}
I0204 00:37:02.537245 139887095990144 run.py:214] (val) step 190: {'average_accuracy': 0.5943747348244467, 'average_shift': 19.25}
I0204 00:37:18.215493 139887095990144 run.py:207] (train) step 200: {'average_accuracy': 0.6246045059923736, 'average_shift': 3.59375}
I0204 00:37:19.864742 139887095990144 run.py:214] (val) step 200: {'average_accuracy': 0.6020842825741287, 'average_shift': 19.6875}
I0204 00:37:35.851976 139887095990144 run.py:207] (train) step 210: {'average_accuracy': 0.589513925106756, 'average_shift': 2.4375}
I0204 00:37:37.524296 139887095990144 run.py:214] (val) step 210: {'average_accuracy': 0.5848563848438394, 'average_shift': 17.40625}
I0204 00:37:53.615173 139887095990144 run.py:207] (train) step 220: {'average_accuracy': 0.5433706301921761, 'average_shift': 2.78125}
I0204 00:37:55.283627 139887095990144 run.py:214] (val) step 220: {'average_accuracy': 0.5915111638757573, 'average_shift': 18.0}
I0204 00:38:11.972004 139887095990144 run.py:207] (train) step 230: {'average_accuracy': 0.6574792216566113, 'average_shift': 3.625}
I0204 00:38:13.639769 139887095990144 run.py:214] (val) step 230: {'average_accuracy': 0.5962643963462074, 'average_shift': 20.03125}
I0204 00:38:29.351703 139887095990144 run.py:207] (train) step 240: {'average_accuracy': 0.6127466283716283, 'average_shift': 3.0625}
I0204 00:38:31.010585 139887095990144 run.py:214] (val) step 240: {'average_accuracy': 0.5976096424047941, 'average_shift': 19.8125}
I0204 00:38:46.791513 139887095990144 run.py:207] (train) step 250: {'average_accuracy': 0.6036052734836115, 'average_shift': 2.4375}
I0204 00:38:48.436064 139887095990144 run.py:214] (val) step 250: {'average_accuracy': 0.5879629144991146, 'average_shift': 15.84375}
I0204 00:38:48.436528 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:39:04.988708 139887095990144 run.py:207] (train) step 260: {'average_accuracy': 0.628144524491032, 'average_shift': 2.75}
I0204 00:39:06.633408 139887095990144 run.py:214] (val) step 260: {'average_accuracy': 0.6008454027124517, 'average_shift': 20.09375}
I0204 00:39:22.497539 139887095990144 run.py:207] (train) step 270: {'average_accuracy': 0.5800335538000011, 'average_shift': 2.4375}
I0204 00:39:24.160987 139887095990144 run.py:214] (val) step 270: {'average_accuracy': 0.6149862489929524, 'average_shift': 17.28125}
I0204 00:39:24.161235 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:39:40.038347 139887095990144 run.py:207] (train) step 280: {'average_accuracy': 0.6203627331614464, 'average_shift': 2.5625}
I0204 00:39:41.686406 139887095990144 run.py:214] (val) step 280: {'average_accuracy': 0.5973124682733885, 'average_shift': 17.03125}
I0204 00:39:57.433853 139887095990144 run.py:207] (train) step 290: {'average_accuracy': 0.5660728874883287, 'average_shift': 2.875}
I0204 00:39:59.119851 139887095990144 run.py:214] (val) step 290: {'average_accuracy': 0.598897042056272, 'average_shift': 20.03125}
I0204 00:40:15.111837 139887095990144 run.py:207] (train) step 300: {'average_accuracy': 0.5935918835045675, 'average_shift': 2.40625}
I0204 00:40:16.802429 139887095990144 run.py:214] (val) step 300: {'average_accuracy': 0.6063341148141381, 'average_shift': 19.5}
I0204 00:40:32.833090 139887095990144 run.py:207] (train) step 310: {'average_accuracy': 0.6702870046620045, 'average_shift': 1.4375}
I0204 00:40:34.519659 139887095990144 run.py:214] (val) step 310: {'average_accuracy': 0.591151830783055, 'average_shift': 13.25}
I0204 00:40:34.519908 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:40:50.736445 139887095990144 run.py:207] (train) step 320: {'average_accuracy': 0.5145470558638129, 'average_shift': 2.6875}
I0204 00:40:52.385346 139887095990144 run.py:214] (val) step 320: {'average_accuracy': 0.5857687563324624, 'average_shift': 12.46875}
I0204 00:40:52.385838 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:41:09.709921 139887095990144 run.py:207] (train) step 330: {'average_accuracy': 0.618225353588405, 'average_shift': 3.34375}
I0204 00:41:11.438741 139887095990144 run.py:214] (val) step 330: {'average_accuracy': 0.5850159169251031, 'average_shift': 14.28125}
I0204 00:41:27.210258 139887095990144 run.py:207] (train) step 340: {'average_accuracy': 0.6876283438783439, 'average_shift': 1.875}
I0204 00:41:28.867662 139887095990144 run.py:214] (val) step 340: {'average_accuracy': 0.601793744418003, 'average_shift': 17.875}
I0204 00:41:44.879887 139887095990144 run.py:207] (train) step 350: {'average_accuracy': 0.6217022127178378, 'average_shift': 2.65625}
I0204 00:41:46.507918 139887095990144 run.py:214] (val) step 350: {'average_accuracy': 0.6067161739455744, 'average_shift': 19.0625}
I0204 00:42:02.416523 139887095990144 run.py:207] (train) step 360: {'average_accuracy': 0.6444163909007659, 'average_shift': 3.75}
I0204 00:42:04.094836 139887095990144 run.py:214] (val) step 360: {'average_accuracy': 0.59499473148717, 'average_shift': 21.15625}
I0204 00:42:19.873359 139887095990144 run.py:207] (train) step 370: {'average_accuracy': 0.6306101017038518, 'average_shift': 2.125}
I0204 00:42:21.629398 139887095990144 run.py:214] (val) step 370: {'average_accuracy': 0.6011593479251793, 'average_shift': 17.84375}
I0204 00:42:37.471442 139887095990144 run.py:207] (train) step 380: {'average_accuracy': 0.6078073376786612, 'average_shift': 2.46875}
I0204 00:42:39.120739 139887095990144 run.py:214] (val) step 380: {'average_accuracy': 0.6216976133068571, 'average_shift': 17.34375}
I0204 00:42:39.121931 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:42:55.230716 139887095990144 run.py:207] (train) step 390: {'average_accuracy': 0.5755416790113481, 'average_shift': 2.84375}
I0204 00:42:56.908239 139887095990144 run.py:214] (val) step 390: {'average_accuracy': 0.6048489978218917, 'average_shift': 19.03125}
I0204 00:43:13.624941 139887095990144 run.py:207] (train) step 400: {'average_accuracy': 0.6525897576473234, 'average_shift': 3.0625}
I0204 00:43:15.320346 139887095990144 run.py:214] (val) step 400: {'average_accuracy': 0.6071286240016344, 'average_shift': 20.5625}
I0204 00:43:31.494751 139887095990144 run.py:207] (train) step 410: {'average_accuracy': 0.5594460966933392, 'average_shift': 4.15625}
I0204 00:43:33.139806 139887095990144 run.py:214] (val) step 410: {'average_accuracy': 0.6112237085243241, 'average_shift': 18.71875}
I0204 00:43:49.326286 139887095990144 run.py:207] (train) step 420: {'average_accuracy': 0.5885158958688372, 'average_shift': 2.875}
I0204 00:43:51.029495 139887095990144 run.py:214] (val) step 420: {'average_accuracy': 0.6032057601372569, 'average_shift': 17.125}
I0204 00:44:07.583399 139887095990144 run.py:207] (train) step 430: {'average_accuracy': 0.6392639044982795, 'average_shift': 2.25}
I0204 00:44:09.255798 139887095990144 run.py:214] (val) step 430: {'average_accuracy': 0.5968670784327177, 'average_shift': 18.34375}
I0204 00:44:25.837116 139887095990144 run.py:207] (train) step 440: {'average_accuracy': 0.5968003341419074, 'average_shift': 2.28125}
I0204 00:44:27.466478 139887095990144 run.py:214] (val) step 440: {'average_accuracy': 0.6060966625290002, 'average_shift': 16.875}
I0204 00:44:44.206390 139887095990144 run.py:207] (train) step 450: {'average_accuracy': 0.672683135389937, 'average_shift': 1.6875}
I0204 00:44:45.854925 139887095990144 run.py:214] (val) step 450: {'average_accuracy': 0.5895354573411473, 'average_shift': 16.40625}
I0204 00:45:02.415930 139887095990144 run.py:207] (train) step 460: {'average_accuracy': 0.56390592658975, 'average_shift': 3.4375}
I0204 00:45:04.123943 139887095990144 run.py:214] (val) step 460: {'average_accuracy': 0.6176653281965696, 'average_shift': 17.03125}
I0204 00:45:20.265053 139887095990144 run.py:207] (train) step 470: {'average_accuracy': 0.6676683100396337, 'average_shift': 3.0}
I0204 00:45:21.898066 139887095990144 run.py:214] (val) step 470: {'average_accuracy': 0.616636800276732, 'average_shift': 19.1875}
I0204 00:45:37.852455 139887095990144 run.py:207] (train) step 480: {'average_accuracy': 0.6981084020146522, 'average_shift': 2.46875}
I0204 00:45:39.490069 139887095990144 run.py:214] (val) step 480: {'average_accuracy': 0.6275447045058228, 'average_shift': 18.6875}
I0204 00:45:39.490313 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:45:55.313541 139887095990144 run.py:207] (train) step 490: {'average_accuracy': 0.5304032951321553, 'average_shift': 2.59375}
I0204 00:45:56.992346 139887095990144 run.py:214] (val) step 490: {'average_accuracy': 0.6016541510080804, 'average_shift': 15.59375}
I0204 00:46:13.293691 139887095990144 run.py:207] (train) step 500: {'average_accuracy': 0.6420489704170527, 'average_shift': 2.40625}
I0204 00:46:14.966763 139887095990144 run.py:214] (val) step 500: {'average_accuracy': 0.6222936665510198, 'average_shift': 17.71875}
I0204 00:46:30.952401 139887095990144 run.py:207] (train) step 510: {'average_accuracy': 0.564820942945943, 'average_shift': 2.75}
I0204 00:46:32.621926 139887095990144 run.py:214] (val) step 510: {'average_accuracy': 0.6088063703869344, 'average_shift': 18.125}
I0204 00:46:48.623781 139887095990144 run.py:207] (train) step 520: {'average_accuracy': 0.6794220281352635, 'average_shift': 2.1875}
I0204 00:46:50.336512 139887095990144 run.py:214] (val) step 520: {'average_accuracy': 0.6128570674330708, 'average_shift': 17.53125}
I0204 00:47:07.597000 139887095990144 run.py:207] (train) step 530: {'average_accuracy': 0.639935804595731, 'average_shift': 2.5}
I0204 00:47:09.249604 139887095990144 run.py:214] (val) step 530: {'average_accuracy': 0.6218806516229478, 'average_shift': 17.53125}
I0204 00:47:25.079731 139887095990144 run.py:207] (train) step 540: {'average_accuracy': 0.6378302527151211, 'average_shift': 1.9375}
I0204 00:47:26.718805 139887095990144 run.py:214] (val) step 540: {'average_accuracy': 0.6443660953528966, 'average_shift': 16.84375}
I0204 00:47:26.719190 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:47:42.529566 139887095990144 run.py:207] (train) step 550: {'average_accuracy': 0.6398661234598735, 'average_shift': 2.0}
I0204 00:47:44.167313 139887095990144 run.py:214] (val) step 550: {'average_accuracy': 0.6242543029609519, 'average_shift': 17.9375}
I0204 00:48:00.179673 139887095990144 run.py:207] (train) step 560: {'average_accuracy': 0.65986222750203, 'average_shift': 2.4375}
I0204 00:48:01.876297 139887095990144 run.py:214] (val) step 560: {'average_accuracy': 0.6118831749819237, 'average_shift': 17.90625}
I0204 00:48:17.966995 139887095990144 run.py:207] (train) step 570: {'average_accuracy': 0.6282767964910477, 'average_shift': 2.53125}
I0204 00:48:19.654706 139887095990144 run.py:214] (val) step 570: {'average_accuracy': 0.6298513312654574, 'average_shift': 17.75}
I0204 00:48:35.974127 139887095990144 run.py:207] (train) step 580: {'average_accuracy': 0.7008771543214268, 'average_shift': 2.1875}
I0204 00:48:37.628417 139887095990144 run.py:214] (val) step 580: {'average_accuracy': 0.6272858727607193, 'average_shift': 18.25}
I0204 00:48:53.530705 139887095990144 run.py:207] (train) step 590: {'average_accuracy': 0.7534510832304953, 'average_shift': 1.9375}
I0204 00:48:55.195035 139887095990144 run.py:214] (val) step 590: {'average_accuracy': 0.6171874362518994, 'average_shift': 18.90625}
I0204 00:49:11.274258 139887095990144 run.py:207] (train) step 600: {'average_accuracy': 0.666325310718693, 'average_shift': 2.28125}
I0204 00:49:12.968050 139887095990144 run.py:214] (val) step 600: {'average_accuracy': 0.6328351978689485, 'average_shift': 17.9375}
I0204 00:49:29.142148 139887095990144 run.py:207] (train) step 610: {'average_accuracy': 0.6305912204893921, 'average_shift': 2.65625}
I0204 00:49:30.871896 139887095990144 run.py:214] (val) step 610: {'average_accuracy': 0.6243022693283699, 'average_shift': 18.75}
I0204 00:49:46.971012 139887095990144 run.py:207] (train) step 620: {'average_accuracy': 0.6482930672268907, 'average_shift': 1.71875}
I0204 00:49:48.625797 139887095990144 run.py:214] (val) step 620: {'average_accuracy': 0.6042861046803771, 'average_shift': 17.125}
I0204 00:50:04.850195 139887095990144 run.py:207] (train) step 630: {'average_accuracy': 0.6682336151013589, 'average_shift': 1.78125}
I0204 00:50:06.511099 139887095990144 run.py:214] (val) step 630: {'average_accuracy': 0.575460180288942, 'average_shift': 13.65625}
I0204 00:50:22.411088 139887095990144 run.py:207] (train) step 640: {'average_accuracy': 0.5811784875663552, 'average_shift': 2.8125}
I0204 00:50:24.066086 139887095990144 run.py:214] (val) step 640: {'average_accuracy': 0.622561932822732, 'average_shift': 16.71875}
I0204 00:50:40.063024 139887095990144 run.py:207] (train) step 650: {'average_accuracy': 0.6949178935851729, 'average_shift': 2.1875}
I0204 00:50:41.754028 139887095990144 run.py:214] (val) step 650: {'average_accuracy': 0.6345589888509873, 'average_shift': 16.6875}
I0204 00:50:57.855228 139887095990144 run.py:207] (train) step 660: {'average_accuracy': 0.7090361438634464, 'average_shift': 2.1875}
I0204 00:50:59.517364 139887095990144 run.py:214] (val) step 660: {'average_accuracy': 0.6131212737918279, 'average_shift': 16.46875}
I0204 00:51:15.719322 139887095990144 run.py:207] (train) step 670: {'average_accuracy': 0.6501129818914748, 'average_shift': 3.4375}
I0204 00:51:17.409390 139887095990144 run.py:214] (val) step 670: {'average_accuracy': 0.6533858862714351, 'average_shift': 17.6875}
I0204 00:51:17.409632 139887095990144 run.py:220] Saving new checkpoint for average accuracy...
I0204 00:51:33.220450 139887095990144 run.py:207] (train) step 680: {'average_accuracy': 0.6219254075387977, 'average_shift': 2.6875}
I0204 00:51:34.885179 139887095990144 run.py:214] (val) step 680: {'average_accuracy': 0.6128167008953191, 'average_shift': 17.71875}
I0204 00:51:50.845432 139887095990144 run.py:207] (train) step 690: {'average_accuracy': 0.6415763898070882, 'average_shift': 2.5625}
I0204 00:51:52.513894 139887095990144 run.py:214] (val) step 690: {'average_accuracy': 0.6079485751690561, 'average_shift': 17.0625}
I0204 00:52:08.464252 139887095990144 run.py:207] (train) step 700: {'average_accuracy': 0.699969635385899, 'average_shift': 2.125}
I0204 00:52:10.154554 139887095990144 run.py:214] (val) step 700: {'average_accuracy': 0.6251504231807161, 'average_shift': 15.3125}
I0204 00:52:26.652964 139887095990144 run.py:207] (train) step 710: {'average_accuracy': 0.6011159413503164, 'average_shift': 1.65625}
I0204 00:52:28.367890 139887095990144 run.py:214] (val) step 710: {'average_accuracy': 0.5864196591074774, 'average_shift': 11.75}
I0204 00:52:28.368382 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:52:44.843248 139887095990144 run.py:207] (train) step 720: {'average_accuracy': 0.6010103892227053, 'average_shift': 2.53125}
I0204 00:52:46.488338 139887095990144 run.py:214] (val) step 720: {'average_accuracy': 0.5467118282806707, 'average_shift': 3.25}
I0204 00:52:46.488756 139887095990144 run.py:225] Saving new checkpoint for average shift...
I0204 00:53:02.685979 139887095990144 run.py:207] (train) step 730: {'average_accuracy': 0.6315668604271547, 'average_shift': 2.125}
I0204 00:53:04.369278 139887095990144 run.py:214] (val) step 730: {'average_accuracy': 0.6041915649965085, 'average_shift': 17.75}
I0204 00:53:20.346972 139887095990144 run.py:207] (train) step 740: {'average_accuracy': 0.6130278958174179, 'average_shift': 2.625}
I0204 00:53:22.027219 139887095990144 run.py:214] (val) step 740: {'average_accuracy': 0.602397854398205, 'average_shift': 18.3125}
I0204 00:53:37.990198 139887095990144 run.py:207] (train) step 750: {'average_accuracy': 0.7041352390084977, 'average_shift': 3.03125}
I0204 00:53:39.661234 139887095990144 run.py:214] (val) step 750: {'average_accuracy': 0.6344661161281298, 'average_shift': 18.90625}
I0204 00:53:55.823451 139887095990144 run.py:207] (train) step 760: {'average_accuracy': 0.6158851361057243, 'average_shift': 2.15625}
I0204 00:53:57.469757 139887095990144 run.py:214] (val) step 760: {'average_accuracy': 0.6060296444676723, 'average_shift': 15.65625}
I0204 00:54:13.669850 139887095990144 run.py:207] (train) step 770: {'average_accuracy': 0.7513793039068775, 'average_shift': 1.46875}
I0204 00:54:15.326584 139887095990144 run.py:214] (val) step 770: {'average_accuracy': 0.6199947079562439, 'average_shift': 17.28125}
I0204 00:54:31.363888 139887095990144 run.py:207] (train) step 780: {'average_accuracy': 0.6738221525421603, 'average_shift': 1.6875}
I0204 00:54:33.069094 139887095990144 run.py:214] (val) step 780: {'average_accuracy': 0.6285075757689359, 'average_shift': 17.84375}
I0204 00:54:49.316741 139887095990144 run.py:207] (train) step 790: {'average_accuracy': 0.6626496282516505, 'average_shift': 2.5}
I0204 00:54:51.024056 139887095990144 run.py:214] (val) step 790: {'average_accuracy': 0.6244072057479346, 'average_shift': 18.03125}
I0204 00:55:07.744493 139887095990144 run.py:207] (train) step 800: {'average_accuracy': 0.6302015437585291, 'average_shift': 2.21875}
I0204 00:55:09.386304 139887095990144 run.py:214] (val) step 800: {'average_accuracy': 0.5892781539304518, 'average_shift': 16.8125}
I0204 00:55:25.611903 139887095990144 run.py:207] (train) step 810: {'average_accuracy': 0.6776449908343289, 'average_shift': 1.71875}
I0204 00:55:27.266914 139887095990144 run.py:214] (val) step 810: {'average_accuracy': 0.6234708919858075, 'average_shift': 18.4375}
Traceback (most recent call last):
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/examples/run.py", line 302, in <module>
  File "/usr/local/lib/python3.7/dist-packages/absl/app.py", line 312, in run
    _run_main(main, args)
  File "/usr/local/lib/python3.7/dist-packages/absl/app.py", line 258, in _run_main
    sys.exit(main(argv))
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/examples/run.py", line 190, in main
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 962, in feedback
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 1131, in update
  File "/usr/local/lib/python3.7/dist-packages/jax/_src/traceback_util.py", line 162, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/usr/local/lib/python3.7/dist-packages/jax/_src/api.py", line 993, in value_and_grad_f
    ans, vjp_py = _vjp(f_partial, *dyn_args, reduce_axes=reduce_axes)
  File "/usr/local/lib/python3.7/dist-packages/jax/_src/api.py", line 2313, in _vjp
    flat_fun, primals_flat, reduce_axes=reduce_axes)
  File "/usr/local/lib/python3.7/dist-packages/jax/interpreters/ad.py", line 116, in vjp
    out_primals, pvals, jaxpr, consts = linearize(traceable, *primals)
  File "/usr/local/lib/python3.7/dist-packages/jax/interpreters/ad.py", line 103, in linearize
    jaxpr, out_pvals, consts = pe.trace_to_jaxpr(jvpfun_flat, in_pvals)
  File "/usr/local/lib/python3.7/dist-packages/jax/interpreters/partial_eval.py", line 513, in trace_to_jaxpr
    jaxpr, (out_pvals, consts, env) = fun.call_wrapped(pvals)
  File "/usr/local/lib/python3.7/dist-packages/jax/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 1128, in loss
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_run.py", line 1349, in log
    self.history._row_add(data)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_history.py", line 44, in _row_add
    self._flush()
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_history.py", line 59, in _flush
    self._callback(row=self._data, step=self._step)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_run.py", line 1028, in _history_callback
    row, step, publish_step=not_using_tensorboard
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface.py", line 506, in publish_history
    self._publish_history(history)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface_shared.py", line 59, in _publish_history
    self._publish(rec)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface_queue.py", line 49, in _publish
    raise Exception("The wandb backend process has shutdown")
jax._src.traceback_util.UnfilteredStackTrace: Exception: The wandb backend process has shutdown
The stack trace below excludes JAX-internal frames.
The preceding is the original exception that occurred, unmodified.
--------------------
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/usr/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/examples/run.py", line 302, in <module>
  File "/usr/local/lib/python3.7/dist-packages/absl/app.py", line 312, in run
    _run_main(main, args)
  File "/usr/local/lib/python3.7/dist-packages/absl/app.py", line 258, in _run_main
    sys.exit(main(argv))
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/examples/run.py", line 190, in main
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 962, in feedback
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 1131, in update
  File "/content/drive/MyDrive/Final Project/new_clrs/clrs/_src/baselines_2.py", line 1128, in loss
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_run.py", line 1349, in log
    self.history._row_add(data)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_history.py", line 44, in _row_add
    self._flush()
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_history.py", line 59, in _flush
    self._callback(row=self._data, step=self._step)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/wandb_run.py", line 1028, in _history_callback
    row, step, publish_step=not_using_tensorboard
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface.py", line 506, in publish_history
    self._publish_history(history)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface_shared.py", line 59, in _publish_history
    self._publish(rec)
  File "/usr/local/lib/python3.7/dist-packages/wandb/sdk/interface/interface_queue.py", line 49, in _publish
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown